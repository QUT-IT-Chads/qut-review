#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Count number of files changed in a directory
countChanged() {
    echo $(git status --porcelain --untracked-files=no | grep -c "$1")
}

echo ""
echo -en "\033[K\033[36mLooking for changes in client/.\033[m"

# Check if client/ has changed
if [[ ($(countChanged "client/app/") -gt 0) || ($(countChanged "client/components/") -gt 0) ]]; then
    # Client side linting and formatting
    cd client;

    yarn run lint:fix;
    yarn run format:fix;

    cd ..;
else
    echo -en "\r\033[K\033[36mNo changes found in client/.\033[m"
fi

echo ""
echo -en "\033[36mLooking for changes in api/domain/src.\033[m"

# Check if api/domain/src has changed
if [[ $(countChanged "api/domain/src") -gt 0 ]]; then
    # If so, prompt the user to update the schemas in the
    # rust-types-to-json projcet
    echo -en "\r\033[K\033[33mChanges found in api/domain/src/.\nPlease ensure that the schemas in rust-types-to-json are up-to-date.\033[m"
else
    echo -en "\r\033[K\033[36mNo changes found in api/domain/src/.\033[m"
fi

echo ""
echo -en "\r\033[K\033[33mPlease wait while the schemas are being exported.\033[m"

# Run the TS script to export the schemas to client/types
tsc ./src/json-to-typescript-types.ts
node ./src/json-to-typescript-types.js
rm ./src/json-to-typescript-types.js

echo -en "\r\033[K\033[32mSuccessfully exported Rust types to client/types/.\033[m"
echo ""
